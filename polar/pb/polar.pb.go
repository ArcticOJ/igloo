// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: polar.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Metadata_CppVersion int32

const (
	Metadata_CPP_98 Metadata_CppVersion = 0
	Metadata_CPP_11 Metadata_CppVersion = 1
	Metadata_CPP_14 Metadata_CppVersion = 2
	Metadata_CPP_17 Metadata_CppVersion = 3
	Metadata_CPP_20 Metadata_CppVersion = 4
)

// Enum value maps for Metadata_CppVersion.
var (
	Metadata_CppVersion_name = map[int32]string{
		0: "CPP_98",
		1: "CPP_11",
		2: "CPP_14",
		3: "CPP_17",
		4: "CPP_20",
	}
	Metadata_CppVersion_value = map[string]int32{
		"CPP_98": 0,
		"CPP_11": 1,
		"CPP_14": 2,
		"CPP_17": 3,
		"CPP_20": 4,
	}
)

func (x Metadata_CppVersion) Enum() *Metadata_CppVersion {
	p := new(Metadata_CppVersion)
	*p = x
	return p
}

func (x Metadata_CppVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Metadata_CppVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_polar_proto_enumTypes[0].Descriptor()
}

func (Metadata_CppVersion) Type() protoreflect.EnumType {
	return &file_polar_proto_enumTypes[0]
}

func (x Metadata_CppVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Metadata_CppVersion.Descriptor instead.
func (Metadata_CppVersion) EnumDescriptor() ([]byte, []int) {
	return file_polar_proto_rawDescGZIP(), []int{0, 0}
}

type File_Language int32

const (
	File_C        File_Language = 0
	File_CPP      File_Language = 1
	File_PASCAL   File_Language = 2
	File_PYTHON_3 File_Language = 3
	File_PYPY_3   File_Language = 4
	File_GO       File_Language = 5
)

// Enum value maps for File_Language.
var (
	File_Language_name = map[int32]string{
		0: "C",
		1: "CPP",
		2: "PASCAL",
		3: "PYTHON_3",
		4: "PYPY_3",
		5: "GO",
	}
	File_Language_value = map[string]int32{
		"C":        0,
		"CPP":      1,
		"PASCAL":   2,
		"PYTHON_3": 3,
		"PYPY_3":   4,
		"GO":       5,
	}
)

func (x File_Language) Enum() *File_Language {
	p := new(File_Language)
	*p = x
	return p
}

func (x File_Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (File_Language) Descriptor() protoreflect.EnumDescriptor {
	return file_polar_proto_enumTypes[1].Descriptor()
}

func (File_Language) Type() protoreflect.EnumType {
	return &file_polar_proto_enumTypes[1]
}

func (x File_Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use File_Language.Descriptor instead.
func (File_Language) EnumDescriptor() ([]byte, []int) {
	return file_polar_proto_rawDescGZIP(), []int{1, 0}
}

type JudgeResult_Verdict int32

const (
	JudgeResult_ACCEPTED              JudgeResult_Verdict = 0
	JudgeResult_WRONG_ANSWER          JudgeResult_Verdict = 1
	JudgeResult_TIME_LIMIT_EXCEEDED   JudgeResult_Verdict = 2
	JudgeResult_MEMORY_LIMIT_EXCEEDED JudgeResult_Verdict = 3
	JudgeResult_RUNTIME_ERROR         JudgeResult_Verdict = 4
)

// Enum value maps for JudgeResult_Verdict.
var (
	JudgeResult_Verdict_name = map[int32]string{
		0: "ACCEPTED",
		1: "WRONG_ANSWER",
		2: "TIME_LIMIT_EXCEEDED",
		3: "MEMORY_LIMIT_EXCEEDED",
		4: "RUNTIME_ERROR",
	}
	JudgeResult_Verdict_value = map[string]int32{
		"ACCEPTED":              0,
		"WRONG_ANSWER":          1,
		"TIME_LIMIT_EXCEEDED":   2,
		"MEMORY_LIMIT_EXCEEDED": 3,
		"RUNTIME_ERROR":         4,
	}
)

func (x JudgeResult_Verdict) Enum() *JudgeResult_Verdict {
	p := new(JudgeResult_Verdict)
	*p = x
	return p
}

func (x JudgeResult_Verdict) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JudgeResult_Verdict) Descriptor() protoreflect.EnumDescriptor {
	return file_polar_proto_enumTypes[2].Descriptor()
}

func (JudgeResult_Verdict) Type() protoreflect.EnumType {
	return &file_polar_proto_enumTypes[2]
}

func (x JudgeResult_Verdict) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JudgeResult_Verdict.Descriptor instead.
func (JudgeResult_Verdict) EnumDescriptor() ([]byte, []int) {
	return file_polar_proto_rawDescGZIP(), []int{2, 0}
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Metadata:
	//
	//	*Metadata_Empty
	//	*Metadata_Version
	Metadata isMetadata_Metadata `protobuf_oneof:"metadata"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polar_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_polar_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_polar_proto_rawDescGZIP(), []int{0}
}

func (m *Metadata) GetMetadata() isMetadata_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *Metadata) GetEmpty() *emptypb.Empty {
	if x, ok := x.GetMetadata().(*Metadata_Empty); ok {
		return x.Empty
	}
	return nil
}

func (x *Metadata) GetVersion() Metadata_CppVersion {
	if x, ok := x.GetMetadata().(*Metadata_Version); ok {
		return x.Version
	}
	return Metadata_CPP_98
}

type isMetadata_Metadata interface {
	isMetadata_Metadata()
}

type Metadata_Empty struct {
	Empty *emptypb.Empty `protobuf:"bytes,1,opt,name=empty,proto3,oneof"`
}

type Metadata_Version struct {
	Version Metadata_CppVersion `protobuf:"varint,2,opt,name=version,proto3,enum=arctic.Metadata_CppVersion,oneof"`
}

func (*Metadata_Empty) isMetadata_Metadata() {}

func (*Metadata_Version) isMetadata_Metadata() {}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *Metadata     `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Buffer   []byte        `protobuf:"bytes,2,opt,name=buffer,proto3" json:"buffer,omitempty"`
	Language File_Language `protobuf:"varint,3,opt,name=language,proto3,enum=arctic.File_Language" json:"language,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polar_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_polar_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_polar_proto_rawDescGZIP(), []int{1}
}

func (x *File) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *File) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

func (x *File) GetLanguage() File_Language {
	if x != nil {
		return x.Language
	}
	return File_C
}

type JudgeResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestNumber uint32              `protobuf:"varint,1,opt,name=test_number,json=testNumber,proto3" json:"test_number,omitempty"`
	Memory     uint64              `protobuf:"varint,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Duration   float64             `protobuf:"fixed64,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Verdict    JudgeResult_Verdict `protobuf:"varint,4,opt,name=verdict,proto3,enum=arctic.JudgeResult_Verdict" json:"verdict,omitempty"`
	Point      uint32              `protobuf:"varint,5,opt,name=point,proto3" json:"point,omitempty"`
}

func (x *JudgeResult) Reset() {
	*x = JudgeResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polar_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgeResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeResult) ProtoMessage() {}

func (x *JudgeResult) ProtoReflect() protoreflect.Message {
	mi := &file_polar_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeResult.ProtoReflect.Descriptor instead.
func (*JudgeResult) Descriptor() ([]byte, []int) {
	return file_polar_proto_rawDescGZIP(), []int{2}
}

func (x *JudgeResult) GetTestNumber() uint32 {
	if x != nil {
		return x.TestNumber
	}
	return 0
}

func (x *JudgeResult) GetMemory() uint64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *JudgeResult) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *JudgeResult) GetVerdict() JudgeResult_Verdict {
	if x != nil {
		return x.Verdict
	}
	return JudgeResult_ACCEPTED
}

func (x *JudgeResult) GetPoint() uint32 {
	if x != nil {
		return x.Point
	}
	return 0
}

type Specifications struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLaptop bool    `protobuf:"varint,1,opt,name=is_laptop,json=isLaptop,proto3" json:"is_laptop,omitempty"`
	Os       string  `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	Cpu      string  `protobuf:"bytes,3,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Mem      float64 `protobuf:"fixed64,4,opt,name=mem,proto3" json:"mem,omitempty"`
}

func (x *Specifications) Reset() {
	*x = Specifications{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polar_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Specifications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Specifications) ProtoMessage() {}

func (x *Specifications) ProtoReflect() protoreflect.Message {
	mi := &file_polar_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Specifications.ProtoReflect.Descriptor instead.
func (*Specifications) Descriptor() ([]byte, []int) {
	return file_polar_proto_rawDescGZIP(), []int{3}
}

func (x *Specifications) GetIsLaptop() bool {
	if x != nil {
		return x.IsLaptop
	}
	return false
}

func (x *Specifications) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Specifications) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *Specifications) GetMem() float64 {
	if x != nil {
		return x.Mem
	}
	return 0
}

type PolarHealth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BootTimestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=boot_timestamp,json=bootTimestamp,proto3" json:"boot_timestamp,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Specs         *Specifications        `protobuf:"bytes,3,opt,name=specs,proto3" json:"specs,omitempty"`
}

func (x *PolarHealth) Reset() {
	*x = PolarHealth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polar_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolarHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolarHealth) ProtoMessage() {}

func (x *PolarHealth) ProtoReflect() protoreflect.Message {
	mi := &file_polar_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolarHealth.ProtoReflect.Descriptor instead.
func (*PolarHealth) Descriptor() ([]byte, []int) {
	return file_polar_proto_rawDescGZIP(), []int{4}
}

func (x *PolarHealth) GetBootTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.BootTimestamp
	}
	return nil
}

func (x *PolarHealth) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PolarHealth) GetSpecs() *Specifications {
	if x != nil {
		return x.Specs
	}
	return nil
}

var File_polar_proto protoreflect.FileDescriptor

var file_polar_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61,
	0x72, 0x63, 0x74, 0x69, 0x63, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x2e, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x37, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x72, 0x63, 0x74, 0x69, 0x63, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x2e, 0x43, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x0a, 0x43, 0x70, 0x70,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x50, 0x50, 0x5f, 0x39,
	0x38, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x50, 0x50, 0x5f, 0x31, 0x31, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x43, 0x50, 0x50, 0x5f, 0x31, 0x34, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43,
	0x50, 0x50, 0x5f, 0x31, 0x37, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x50, 0x50, 0x5f, 0x32,
	0x30, 0x10, 0x04, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xc9, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x63,
	0x74, 0x69, 0x63, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x31,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x61, 0x72, 0x63, 0x74, 0x69, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x22, 0x48, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x05, 0x0a,
	0x01, 0x43, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x50, 0x50, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x50, 0x41, 0x53, 0x43, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x59, 0x54,
	0x48, 0x4f, 0x4e, 0x5f, 0x33, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x59, 0x50, 0x59, 0x5f,
	0x33, 0x10, 0x04, 0x12, 0x06, 0x0a, 0x02, 0x47, 0x4f, 0x10, 0x05, 0x22, 0xa1, 0x02, 0x0a, 0x0b,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x35, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x61, 0x72, 0x63, 0x74, 0x69, 0x63, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x56, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x70, 0x0a,
	0x07, 0x56, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x43, 0x45,
	0x50, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x52, 0x4f, 0x4e, 0x47, 0x5f,
	0x41, 0x4e, 0x53, 0x57, 0x45, 0x52, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x49, 0x4d, 0x45,
	0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x45, 0x4d, 0x4f, 0x52, 0x59, 0x5f, 0x4c, 0x49, 0x4d, 0x49,
	0x54, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d,
	0x52, 0x55, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x22,
	0x61, 0x0a, 0x0e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x61, 0x70, 0x74, 0x6f, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x70, 0x75,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d,
	0x65, 0x6d, 0x22, 0x98, 0x01, 0x0a, 0x0b, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x12, 0x41, 0x0a, 0x0e, 0x62, 0x6f, 0x6f, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x2c, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x72, 0x63, 0x74, 0x69, 0x63, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73, 0x32, 0x6c, 0x0a,
	0x05, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x12, 0x35, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x61, 0x72, 0x63, 0x74, 0x69,
	0x63, 0x2e, 0x50, 0x6f, 0x6c, 0x61, 0x72, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x2c, 0x0a,
	0x05, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x12, 0x0c, 0x2e, 0x61, 0x72, 0x63, 0x74, 0x69, 0x63, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x1a, 0x13, 0x2e, 0x61, 0x72, 0x63, 0x74, 0x69, 0x63, 0x2e, 0x4a, 0x75,
	0x64, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x30, 0x01, 0x42, 0x11, 0x5a, 0x0f, 0x61,
	0x72, 0x63, 0x74, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x2f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_polar_proto_rawDescOnce sync.Once
	file_polar_proto_rawDescData = file_polar_proto_rawDesc
)

func file_polar_proto_rawDescGZIP() []byte {
	file_polar_proto_rawDescOnce.Do(func() {
		file_polar_proto_rawDescData = protoimpl.X.CompressGZIP(file_polar_proto_rawDescData)
	})
	return file_polar_proto_rawDescData
}

var file_polar_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_polar_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_polar_proto_goTypes = []interface{}{
	(Metadata_CppVersion)(0),      // 0: arctic.Metadata.CppVersion
	(File_Language)(0),            // 1: arctic.File.Language
	(JudgeResult_Verdict)(0),      // 2: arctic.JudgeResult.Verdict
	(*Metadata)(nil),              // 3: arctic.Metadata
	(*File)(nil),                  // 4: arctic.File
	(*JudgeResult)(nil),           // 5: arctic.JudgeResult
	(*Specifications)(nil),        // 6: arctic.Specifications
	(*PolarHealth)(nil),           // 7: arctic.PolarHealth
	(*emptypb.Empty)(nil),         // 8: google.protobuf.Empty
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_polar_proto_depIdxs = []int32{
	8, // 0: arctic.Metadata.empty:type_name -> google.protobuf.Empty
	0, // 1: arctic.Metadata.version:type_name -> arctic.Metadata.CppVersion
	3, // 2: arctic.File.metadata:type_name -> arctic.Metadata
	1, // 3: arctic.File.language:type_name -> arctic.File.Language
	2, // 4: arctic.JudgeResult.verdict:type_name -> arctic.JudgeResult.Verdict
	9, // 5: arctic.PolarHealth.boot_timestamp:type_name -> google.protobuf.Timestamp
	6, // 6: arctic.PolarHealth.specs:type_name -> arctic.Specifications
	8, // 7: arctic.Polar.Health:input_type -> google.protobuf.Empty
	4, // 8: arctic.Polar.Judge:input_type -> arctic.File
	7, // 9: arctic.Polar.Health:output_type -> arctic.PolarHealth
	5, // 10: arctic.Polar.Judge:output_type -> arctic.JudgeResult
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_polar_proto_init() }
func file_polar_proto_init() {
	if File_polar_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_polar_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polar_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polar_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JudgeResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polar_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Specifications); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polar_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolarHealth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_polar_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Metadata_Empty)(nil),
		(*Metadata_Version)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_polar_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_polar_proto_goTypes,
		DependencyIndexes: file_polar_proto_depIdxs,
		EnumInfos:         file_polar_proto_enumTypes,
		MessageInfos:      file_polar_proto_msgTypes,
	}.Build()
	File_polar_proto = out.File
	file_polar_proto_rawDesc = nil
	file_polar_proto_goTypes = nil
	file_polar_proto_depIdxs = nil
}
